$(function () {
    $(document).on('submit', 'form[data-ajax-form], .modal[data-ajax-modal] form', function (e) {
        e.preventDefault();
        const $form = $(this);

        if (!$form.attr('action')) {
            throw new Error('El form necesita tener un action para usarse por ajax');
        }

        $.ajax({
            url: $form.attr('action'),
            method: $form.attr('method') ?? 'post',
            data: $form.serialize(),
        }).done(res => {
            const $modal = $form.closest('.modal[data-ajax-modal]');

            if (0 !== $modal.length) {
                $modal.modal('hide');
            }

            $form.trigger('ajax_form.done');
        }).fail(error => {
            if (error.status == 400) {
                const $parent = $form.parent();

                if ($form.data('ajaxForm')) {
                    $($form.data('ajaxForm')).replaceWith(error.responseText);
                } else {
                    $form.replaceWith(error.responseText);
                }

                $parent.find('> form:first').trigger('ajax_form.fail');
            }
        });
    }).on('click', 'a[data-ajax-form], :button[data-ajax-form]', function (e) {
        e.preventDefault();
        const $this = $(this);
        const url = $this.is('a') ? $this.attr('href') : $this.data('url');

        if (!url) {
            throw new Error("Url no debe estar vacio, si es un boton, de definirse el [data-url]");
        }

        $.get(url).done(html => {
            const $ajaxFormContainer = $($this.data('ajaxForm')).html(html);

            const $modal = $ajaxFormContainer.closest('.modal[data-ajax-modal]');

            if (0 !== $modal.length) {
                $modal.modal('show');
            }

            $this.trigger('ajax_form.load');
        });
    });
});
